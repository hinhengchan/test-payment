<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.neat</groupId>
	<artifactId>testpayment</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<surefire.forkCount>1</surefire.forkCount>
		<test.tags></test.tags>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>21.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>com.github.temyers</groupId>
				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
				<version>4.2.0</version>
				<executions>
					<execution>
						<id>generateRunners</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generateRunners</goal>
						</goals>
						<configuration>
							<!-- Mandatory -->
							<!-- List of package names to scan for glue code. -->
							<glue>
								<package>steps</package>
							</glue>
							<!-- These are optional, with the default values -->
							<!-- Where to output the generated tests -->
							<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
							<!-- List of cucumber plugins. When none are provided the json formatter 
								is used. For more advanced usage see section about configuring cucumber plugins -->
							<plugins>
								<plugin>
									<name>rerun</name>
									<outputDirectory>${project.build.directory}/cucumber-parallel/rerun</outputDirectory>
								</plugin>
								<plugin>
									<name>json</name>
									<!--Optional file extension. For build in cucumber plugins a sensible 
										default is provided. -->
									<extension>json</extension>
									<!--Optional output directory. Overrides cucumberOutputDirectory. 
										Usefull when different plugins create files with the same extension -->
									<outputDirectory>${project.build.directory}/cucumber-parallel/json</outputDirectory>
								</plugin>
								<plugin>
									<name>junit</name>
									<!--Optional file extension. For build in cucumber plugins a sensible 
										default is provided. -->
									<extension>xml</extension>
									<!--Optional output directory. Overrides cucumberOutputDirectory. 
										Usefull when different plugins create files with the same extension -->
									<outputDirectory>${project.build.directory}/cucumber-parallel/junit</outputDirectory>
								</plugin>
								<!-- <plugin> <name>html</name> <outputDirectory>${project.build.directory}/cucumber-parallel/html</outputDirectory> 
									</plugin> -->
							</plugins>
							<!-- The directory, which must be in the root of the runtime classpath, 
								containing your feature files. -->
							<featuresDirectory>src/test/resources/features/</featuresDirectory>
							<!-- Directory where the cucumber report files shall be written -->
							<cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
							<!-- CucumberOptions.strict property -->
							<strict>true</strict>
							<!-- CucumberOptions.monochrome property -->
							<monochrome>true</monochrome>
							<!-- The tags to run, maps to CucumberOptions.tags property. Default 
								is no tags. -->
							<tags>
								<tag>${test.tags}</tag>
							</tags>
							<!-- Generate TestNG runners instead of JUnit ones. -->
							<useTestNG>false</useTestNG>
							<!-- The naming scheme to use for the generated test classes. One 
								of 'simple' or 'feature-title' -->
							<namingScheme>simple</namingScheme>
							<!-- The class naming pattern to use. Only required/used if naming 
								scheme is 'pattern'. -->
							<namingPattern>Parallel{c}IT</namingPattern>
							<!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per 
								scenario. FEATURE generates a runner per feature. -->
							<parallelScheme>SCENARIO</parallelScheme>
							<!-- Specify a custom template for the generated sources (this is 
								a path relative to the project base directory) -->
							<!-- <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate> -->
							<!-- Specify a custom package name for generated sources. Default 
								is no package. -->
							<packageName>com.neat</packageName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>resources</additionalClasspathElement>
					</additionalClasspathElements>
					<forkCount>${surefire.forkCount}</forkCount>
					<reuseForks>true</reuseForks>
					<includes>
						<include>**/Parallel*IT.class</include>
					</includes>
					<!-- <rerunFailingTestsCount>2</rerunFailingTestsCount> -->
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.temyers
										</groupId>
										<artifactId>
											cucumber-jvm-parallel-plugin
										</artifactId>
										<versionRange>
											[4.2.0,)
										</versionRange>
										<goals>
											<goal>generateRunners</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>com.github.temyers</groupId>
			<artifactId>cucumber-jvm-parallel-plugin</artifactId>
			<version>4.2.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>gherkin</artifactId>
			<version>5.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>

	</dependencies>
</project>
